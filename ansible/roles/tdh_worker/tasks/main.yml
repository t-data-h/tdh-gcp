---
- name: Check for existing TDH
  tags: [tdh-config]
  ansible.builtin.stat:
    path: '{{ tdh_install_path }}'
  register: tdhstat

- name: Check for TDH tarball drop
  tags: [tdh-config]
  ansible.builtin.stat:
    path: '{{ tdh_dropfile }}'
  register: tdhdropstat

- name: TDH Provisioning
  when: tdhstat.stat.exists
  tags: [tdh-config]
  block:
    - name: TDH Provisioning - 03-tdh-provision
      ansible.builtin.shell: '{{ tdh_install_path }}/sbin/03-tdh-provision.sh'
    - name: TDH Provisioning - 07-spark-provision
      ansible.builtin.shell: '{{ tdh_install_path }}/sbin/07-spark-provision.sh'
    - name: TDH Provisioning - 09-kafka-provision
      ansible.builtin.shell: '{{ tdh_install_path }}/sbin/09-kafka-provision.sh'
    - name: Create HDFS DataNode path(s)
      become: true
      ansible.builtin.file:
        path: '{{ tdh_datadir_prefix }}{{ item }}/{{ tdh_dn_dir }}'
        owner: '{{ tdh_user }}'
        group: '{{ tdh_user }}'
        mode: '0750'
        state: directory
      with_items: '{{ tdh_slave_volumes }}'
    - name: Create HDFS DomainSocket path
      become: true
      ansible.builtin.file:
        path: '{{ tdh_hdfs_ds_dir }}'
        owner: '{{ tdh_user }}'
        group: '{{ tdh_user }}'
        mode: '0750'
        state: directory
    - name: Create YARN NodeManager path(s)
      become: true
      ansible.builtin.file:
        path: '{{ tdh_datadir_prefix }}{{ item }}/{{ tdh_nm_dir }}'
        owner: '{{ tdh_user }}'
        group: '{{ tdh_user }}'
        mode: '0750'
        state: directory
      with_items: '{{ tdh_slave_volumes }}'

---
- name: Check for existing TDH
  stat:
    path: '{{ tdh_install_path }}'
  tags: [ tdh-config ]
  register: tdhstat

- name: Check for TDH tarball drop
  stat:
    path: '{{ tdh_dropfile }}'
  register: tdhdropstat

- name: TDH Provisioning...
  block:
  - name: TDH Provisioning Step 1
    shell: '{{ tdh_install_path }}/sbin/03-tdh-provision.sh'

  - name: TDH Provisioning Step 2
    shell: '{{ tdh_install_path }}/sbin/07-spark-provision.sh'

  - name: Provision Kafka Broker Id
    shell: '{{ tdh_install_path }}/sbin/09-kafka-provision.sh'

  - name: Create HDFS DataNode path(s)
    become: true
    file:
      path: '{{ tdh_datadir_prefix }}{{ item }}/{{ tdh_dn_dir }}'
      owner: '{{ tdh_user }}'
      group: '{{ tdh_user }}'
      mode: 0750
      state: directory
    with_items: '{{ tdh_slave_volumes }}'

  - name: Create HDFS DomainSocket path
    become: true
    file:
      path: '{{ tdh_hdfs_ds_dir }}'
      owner: '{{ tdh_user }}'
      group: '{{ tdh_user }}'
      mode: 0750
      state: directory

  - name: Create YARN NodeManager path(s)
    become: true
    file:
      path: '{{ tdh_datadir_prefix }}{{ item }}/{{ tdh_nm_dir }}'
      owner: '{{ tdh_user }}'
      group: '{{ tdh_user }}'
      mode: 0750
      state: directory
    with_items: '{{ tdh_slave_volumes }}'

  tags: [ tdh-config ]
  when: tdhstat.stat.exists

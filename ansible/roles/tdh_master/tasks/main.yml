---
- name: Check for existing Namenode Directory
  ansible.builtin.stat:
    path: '{{ tdh_namenode_dir }}'
  tags: [tdh-config]
  register: nndir

- name: Check for existing TDH
  ansible.builtin.stat:
    path: '{{ tdh_install_path }}'
  tags: [tdh-config]
  register: tdhstat

- name: Check for TDH tarball drop
  ansible.builtin.stat:
    path: '{{ tdh_dropfile }}'
  register: tdhdropstat

- name: Fail if both TDH dropfile AND TDH Install are missing.
  when: not tdhdropstat.stat.exists and not tdhstat.stat.exists
  ansible.builtin.fail:
    msg: "Both TDH Install and TDH dropfile not found"

- name: Master system packages (RHEL/CentOS)
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  ansible.builtin.yum:
    name: '{{ yum_master_packages }}'
    lock_timeout: 180
    state: present

- name: Master system packages (Debian/Ubuntu)
  become: true
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  ansible.builtin.yum:
    name: '{{ apt_master_packages }}'
    state: present

- name: TDH Provisioning
  when: tdhstat.stat.exists
  tags: [tdh-config]
  block:
    - name: TDH Provisioning - 01-tdh-mysql-provision
      when: inventory_hostname in groups['master01'] and not nndir.stat.exists
      ansible.builtin.shell: '{{ tdh_install_path }}/sbin/01-tdh-mysql-provision.sh {{ mysql_hive_db }}'
    - name: TDH Provisioning - 03-tdh-provision
      ansible.builtin.shell: '{{ tdh_install_path }}/sbin/03-tdh-provision.sh'
    - name: Increase Host Entropy
      become: true
      ansible.builtin.shell: 'rngd -r /dev/urandom'

    - name: Configure HDFS Namenode
      when: not nndir.stat.exists
      block:
        - name: Create NameNode path(s)
          become: true
          ansible.builtin.file:
            path: '{{ tdh_datadir_prefix }}{{ item }}/{{ tdh_nn_dir }}'
            owner: '{{ tdh_user }}'
            group: '{{ tdh_group }}'
            mode: '0750'
            state: directory
          with_items: '{{ tdh_master_volumes }}'
        - name: Create JournalNode path(s)
          become: true
          ansible.builtin.file:
            path: '{{ tdh_datadir_prefix }}{{ item }}/{{ tdh_jn_dir }}'
            owner: '{{ tdh_user }}'
            group: '{{ tdh_group }}'
            mode: '0750'
            state: directory
          with_items: '{{ tdh_master_volumes }}'
        - name: Create ZooKeeper 'dataDir'
          become: true
          ansible.builtin.file:
            path: '{{ tdh_zk_data_dir }}'
            owner: '{{ tdh_user }}'
            group: '{{ tdh_group }}'
            mode: '0750'
            state: directory
        - name: Create ZooKeeper 'dataLogDir'
          become: true
          ansible.builtin.file:
            path: '{{ tdh_zk_datalog_dir }}'
            owner: '{{ tdh_user }}'
            group: '{{ tdh_group }}'
            mode: '0750'
            state: directory
        - name: TDH Provisioning - 05-zk-provision
          ansible.builtin.shell: '{{ tdh_install_path }}/sbin/05-zk-provision.sh'
        - name: TDH Provisioning - 00-hdfs-format.sh
          ansible.builtin.shell: '{{ tdh_install_path }}/sbin/00-hdfs-format.sh'
          when: inventory_hostname in groups['master01']

    - name: TDH Provisioning - 07-spark-provision
      ansible.builtin.shell: '{{ tdh_install_path }}/sbin/07-spark-provision.sh'
    - name: TDH Provisioning - 09-kafka-provision
      ansible.builtin.shell: '{{ tdh_install_path }}/sbin/09-kafka-provision.sh'
    - name: Configure Metastore password
      ansible.builtin.replace:
        path: '{{ tdh_install_path }}/hive/conf/hive-site.xml'
        regexp: '%% MYSQL_HIVE_PASSWORD %%'
        replace: '{{ mysql_hive_password }}'

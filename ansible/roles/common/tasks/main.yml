---
# TDH Ansible Common Role
#
- include_vars: ../vars/constants.yml

- name: Check for TDH tarball drop
  stat:
    path: '{{ tdh_dropfile }}'
  register: tdhdropstat

- name: Check for TDH Config Drop
  stat:
    path: '{{ tdh_config_dropfile }}'
  tags: [ tdh-config ]
  register: tdhconfigstat

- name: Check for TDH-MGR Drop
  stat:
    path: '{{ tdh_mgr_dropfile }}'
  tags: [ tdh-mgr ]
  register: tdhmgrstat

- name: Check for existing TDH Install
  stat:
    path: '{{ tdh_install_path }}'
  register: tdhstat

- name: Check for Anaconda Drop
  stat:
    path: '{{ tdh_python3_dropfile }}'
  tags: [ tdh-python ]
  register: tdhpystat

- name: Create tmp directory
  become: true
  file:
    path: '{{ tdh_tmp_path }}'
    state: directory
    mode: '0777'
  tags: [ tdh-config, tdh-mgr, tdh-python]

- name: Deploy TDH
  block:
  - name:  Remove previous TDH installation
    become: true
    file:
      path: '{{ tdh_install_path }}'
      state: absent
  - name: Extract TDH Package
    become: true
    unarchive:
      src: '{{ tdh_dropfile }}'
      dest: '/opt'
      remote_src: 'yes'
      creates: '{{ tdh_install_path }}'
  - name: Cleanup TDH install package
    file:
      path: '{{ tdh_dropfile }}'
      state: absent
  - name: Create the opt TDH/hadoop link
    become: true
    file:
      src: '{{ tdh_install_path }}'
      dest: '/opt/hadoop'
      state: link
  when: tdhdropstat.stat.exists

- name: TDH Config Deploy
  block:
  - name: Extract TDH Config package
    unarchive:
      src: '{{ tdh_config_dropfile }}'
      dest: '{{ tdh_tmp_path }}'
      creates: '{{ tdh_config_path }}'
  - name: Syncronize TDH Config
    shell: 'rsync -aK {{ tdh_config_path }}/ {{ tdh_install_path }}/'
  - name: Cleanup TDH Config install path
    file:
      path: '{{ tdh_config_path }}'
      state: absent
  - name: Cleanup TDH Config Package
    file:
      path: '{{ tdh_config_dropfile }}'
      state: absent
  tags: [ tdh-config ]
  when: tdhconfigstat.stat.exists

- name: TDH Mgr Deploy
  block:
  - name: Extract TDH Mgr Package
    unarchive:
      src: '{{ tdh_mgr_dropfile }}'
      dest: '{{ tdh_tmp_path }}'
      remote_src: 'yes'
      creates: '{{ tdh_mgr_path }}'
  - name: Install TDH Mgr
    shell: 'cd {{ tdh_mgr_path }} && make install'
  - name: Cleanup TDH Mgr Installation
    file:
      path: '{{ tdh_mgr_path }}'
      state: absent
  - name: Cleanup TDH Mgr Package
    file:
      path: '{{ tdh_mgr_dropfile }}'
      state: absent
  tags: [ tdh-mgr ]
  when: tdhmgrstat.stat.exists

- name: Python Anaconda Deploy
  block:
  - name: Remove previous Anaconda
    file:
      path: '{{ tdh_python3_path }}'
      state: absent
  - name: Ensure python3 path exists
    file:
      path: '{{ tdh_python3_install_path }}'
      state: directory
      mode: 0755
  - name: Extract Anaconda package
    unarchive:
      src: '{{ tdh_python3_dropfile }}'
      dest: '{{ tdh_python3_install_path }}'
      remote_src: 'yes'
      creates: '{{ tdh_python3_path }}'
  - name: Cleanup Anaconda package
    file:
      path: '{{ tdh_python3_dropfile }}'
      state: absent
  tags: [ tdh-python ]
  when: tdhpystat.stat.exists
  become: true

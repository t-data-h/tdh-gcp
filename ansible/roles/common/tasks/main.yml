---
- name: Check for TDH tarball drop
  ansible.builtin.stat:
    path: '{{ tdh_dropfile }}'
  register: tdhdropstat

- name: Check for TDH Config Drop
  tags: [tdh-config]
  ansible.builtin.stat:
    path: '{{ tdh_config_dropfile }}'
  register: tdhconfigstat

- name: Check for TDH-MGR Drop
  tags: [tdh-mgr]
  ansible.builtin.stat:
    path: '{{ tdh_mgr_dropfile }}'
  register: tdhmgrstat

- name: Check for Anaconda Drop
  tags: [tdh-python]
  ansible.builtin.stat:
    path: '{{ tdh_python3_dropfile }}'
  register: tdhpystat

- name: TDH Deploy
  become: true
  when: tdhdropstat.stat.exists
  block:
    - name: Remove previous TDH installation
      ansible.builtin.file:
        path: '{{ tdh_install_path }}'
        state: absent
    - name: Extract TDH Package
      ansible.builtin.unarchive:
        src: '{{ tdh_dropfile }}'
        dest: '/opt'
        remote_src: 'yes'
        owner: '{{ tdh_user }}'
        group: '{{ tdh_group }}'
        mode: '0755'
        creates: '{{ tdh_install_path }}'
    - name: Cleanup TDH install package
      ansible.builtin.file:
        path: '{{ tdh_dropfile }}'
        state: absent
    - name: Create the opt TDH/hadoop link
      ansible.builtin.file:
        src: '{{ tdh_install_path }}'
        dest: '/opt/hadoop'
        state: link

- name: Check for existing TDH Install
  tags: [tdh-config, tdh-mgr]
  ansible.builtin.stat:
    path: '{{ tdh_install_path }}'
  register: tdhstat

- ansible.builtin.include_tasks: tdh-config-deploy.yml
  when: tdhconfigstat.stat.exists and tdhstat.stat.exists

- ansible.builtin.include_tasks: tdh-mgr-deploy.yml
  when: tdhmgrstat.stat.exists and tdhstat.stat.exists

- ansible.builtin.include_tasks: tdh-python-deploy.yml
  when: tdhpystat.stat.exists
